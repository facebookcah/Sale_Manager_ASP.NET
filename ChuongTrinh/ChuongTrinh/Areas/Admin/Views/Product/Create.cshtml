@model ChuongTrinh.Models.SanPham

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Thêm mới</h2>

@using (Html.BeginForm("create", "product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Sản phẩm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.TrangThai, htmlAttributes: new { @class = "control-label", @style = "float:left;" })

                <select class="form-control" name="TrangThai">
                    <option value="true">Còn hàng</option>
                    <option value="false">Hết hàng</option>
                </select>
                @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KhoiLuong, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                @Html.EditorFor(model => model.KhoiLuong, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KhoiLuong, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GiaBan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                @Html.EditorFor(model => model.GiaBan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GiaBan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
             <img id="output" class="img-rounded" alt="" width="200" height="200" style="border-radius:20px;margin-top:10px;"  />
            
            <input name="ImageFile" id="ufile" type="file"  onchange="loadFile(event)" />
            <input value="ds" name="Anh" hidden />
            @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.MaDanhMuc, "Tên danh mục", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MaDanhMuc", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaDanhMuc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-2">
            <input type="submit" value="Tạo mới" class="btn btn-outline-success mt-2" />
            <a class="btn btn-outline-warning mt-2" href="@Url.Action("Index","Product")">Trở về</a>
        </div>
    </div>
}
@if (ViewBag.Error != null)
{
    <br />
    <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
}

<script>
    var loadFile = function (event) {
        var image = document.getElementById('output'); image.src = URL.createObjectURL(event.target.files[0]);
    };
</script>